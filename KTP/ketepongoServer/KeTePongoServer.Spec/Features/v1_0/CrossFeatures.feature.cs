// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.6.0.0
//      SpecFlow Generator Version:3.6.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace KeTePongoServer.Spec.Features.V1_0
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.6.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("CrossFeatures", Description="\tcross features", SourceFile="Features\\v1_0\\CrossFeatures.feature", SourceLine=0)]
    public partial class CrossFeaturesFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "CrossFeatures.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/v1_0", "CrossFeatures", "\tcross features", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Updating from ERP products used in consumer consumption", new string[] {
                "basic"}, SourceLine=4)]
        public virtual void UpdatingFromERPProductsUsedInConsumerConsumption()
        {
            string[] tagsOfScenario = new string[] {
                    "basic"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Updating from ERP products used in consumer consumption", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 testRunner.Given("1_0 a new user confirmed with (Type:\'ProviderUser\' UserEmail:\'provider.UpdatingFr" +
                        "omERPProductsUsedInConsumerConsumption@pccom.es\' Password:\',Adios22\' Name:\'provi" +
                        "der.UpdatingFromERPProductsUsedInConsumerConsumption\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
 testRunner.When(@"1_0 provider data is submitted (TradeName:'provider.UpdatingFromERPProductsUsedInConsumerConsumption' Address:'c\Bajovento 3' StateOrProvince:'Alicante' Town:'Elche' PostalCode:'03203' Telephone:'600000000' SanitaryMeasures:'Medida 1, Medida 2' Image:'(.*)')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 8
 testRunner.Then("1_0 response is Created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 9
 testRunner.Given("1_0 a new user confirmed with (Type:\'ConsumerUser\' UserEmail:\'consumer.UpdatingFr" +
                        "omERPProductsUsedInConsumerConsumption@pccom.es\' Password:\',Adios22\' Name:\'consu" +
                        "mer.UpdatingFromERPProductsUsedInConsumerConsumption\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 10
 testRunner.When("1_0 consumer data is submitted (TradeName:\'consumer.UpdatingFromERPProductsUsedIn" +
                        "ConsumerConsumption\' Address:\'C\\Bajovento 3\' StateOrProvince:\'Alicante\' Town:\'El" +
                        "che\' PostalCode:\'03203\' SanitaryMeasures:\'Medida 1, Medida 2\' Image:\'(.*)\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 11
 testRunner.And("1_0 response is Created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 12
 testRunner.Given("1_0 get admin user access token", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 13
 testRunner.And("1_0 response is Ok", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
 testRunner.And("1_0 start using access token for all requests", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
 testRunner.And("1_0 a new OauthApp request (ClientId:\'OauthAppTestUpdatingFromERPProductsUsedInCo" +
                        "nsumerConsumption\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
 testRunner.And("1_0 response is Ok", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
 testRunner.And("1_0 a link from OAuthApp to provider request (ClientId:\'OauthAppTestUpdatingFromE" +
                        "RPProductsUsedInConsumerConsumption\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 18
 testRunner.Then("1_0 response is Ok", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 19
 testRunner.Then("1_0 get OAuthApp access token (ClientId:\'OauthAppTestUpdatingFromERPProductsUsedI" +
                        "nConsumerConsumption\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 20
 testRunner.And("1_0 start using access token for all requests", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 21
 testRunner.And("1_0 provider has now LinkedToERP true and catalog is private", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                            "ERPId",
                            "DisplayOrder",
                            "Name"});
                table11.AddRow(new string[] {
                            "1",
                            "1",
                            "entrantes"});
                table11.AddRow(new string[] {
                            "2",
                            "2",
                            "primeros"});
                table11.AddRow(new string[] {
                            "3",
                            "3",
                            "carnes"});
                table11.AddRow(new string[] {
                            "4",
                            "4",
                            "postres"});
#line 22
 testRunner.And("1_0 set Sections for Put", ((string)(null)), table11, "And ");
#line hidden
                TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                            "IsHiddenInCarte",
                            "DisplayOrder",
                            "SectionERPIds",
                            "ERPId",
                            "PVP",
                            "AllergenIds",
                            "IsVegan",
                            "Description",
                            "Name"});
                table12.AddRow(new string[] {
                            "false",
                            "1",
                            "1",
                            "1",
                            "3",
                            "2",
                            "true",
                            "humus de garbanzo",
                            "humus"});
                table12.AddRow(new string[] {
                            "false",
                            "2",
                            "1",
                            "2",
                            "4",
                            "1",
                            "false",
                            "patatas con queso y bacon",
                            "patatas de la casa"});
                table12.AddRow(new string[] {
                            "false",
                            "3",
                            "3",
                            "3",
                            "20",
                            "",
                            "false",
                            "chuleton de avila D.O",
                            "chuleton de avila"});
#line 28
  testRunner.And("1_0 Put ERPCatalogProducts", ((string)(null)), table12, "And ");
#line hidden
#line 33
    testRunner.Then("1_0 response is Ok", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 34
     testRunner.And("1_0 a provider catalog products request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
    testRunner.Then("1_0 response is Ok", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 36
    testRunner.And("1_0 updated provider catalog products has same info submitted by ERP and is valid" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                            "Address",
                            "BussinessName",
                            "Country",
                            "Email",
                            "ERPId",
                            "PostalCode",
                            "StateOrProvince",
                            "Telephone",
                            "Town",
                            "TradeName"});
                table13.AddRow(new string[] {
                            "calle falsa 123",
                            "La Majada",
                            "España",
                            "lamajada@lamajada.es",
                            "7",
                            "02005",
                            "Valencia",
                            "000600600",
                            "Valencia",
                            "La Majada"});
                table13.AddRow(new string[] {
                            "calle verdadera 123",
                            "La Majada Quesos",
                            "España",
                            "lamajadaquesos@lamajadaquesos.es",
                            "8",
                            "01005",
                            "Valencia",
                            "100600600",
                            "Valencia",
                            "La Majada Quesos"});
                table13.AddRow(new string[] {
                            "avenida falsa 123",
                            "La Majada Tienda",
                            "España",
                            "lamajadatienda@lamajadatienda.es",
                            "9",
                            "00004",
                            "Valencia",
                            "200600600",
                            "Valencia",
                            "La Majada Tienda"});
#line 37
 testRunner.And("1_0 a new Provider LinkedToERP put ERPClientsPortfolio request", ((string)(null)), table13, "And ");
#line hidden
#line 42
 testRunner.Then("1_0 response is Ok", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 43
 testRunner.And("1_0 get access token for user (userName: \'consumer.UpdatingFromERPProductsUsedInC" +
                        "onsumerConsumption\' password: \',Adios22\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
 testRunner.And("1_0 response is Ok", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
 testRunner.And("1_0 start using access token for all requests", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 46
 testRunner.Then("1_0 consumer request to link provider by email or phone (Email:\'provider.Updating" +
                        "FromERPProductsUsedInConsumerConsumption@pccom.es\' Phone:\'null\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 47
 testRunner.And("1_0 response is Ok", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 48
 testRunner.And("1_0 response message contains (Message: \'provider.UpdatingFromERPProductsUsedInCo" +
                        "nsumerConsumption@pccom.es\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 49
 testRunner.Then("1_0 request to link a new provider with given response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 50
 testRunner.And("1_0 response is Created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 51
 testRunner.And("1_0 get access token for user (userName: \'provider.UpdatingFromERPProductsUsedInC" +
                        "onsumerConsumption\' password: \',Adios22\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 52
 testRunner.And("1_0 response is Ok", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 53
 testRunner.And("1_0 start using access token for all requests", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 54
 testRunner.And("1_0 Provider validates the consumer of a provider salesman with (consumerTradenam" +
                        "e:\'consumer.UpdatingFromERPProductsUsedInConsumerConsumption\' erpId:\'8\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 55
 testRunner.And("1_0 response is Ok", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 56
 testRunner.And("1_0 get access token for user (userName: \'consumer.UpdatingFromERPProductsUsedInC" +
                        "onsumerConsumption\' password: \',Adios22\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 57
 testRunner.And("1_0 response is Ok", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 58
 testRunner.And("1_0 start using access token for all requests", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 59
 testRunner.And("1_0 a new linked consumer product request with (Name:\'chuleton de avila\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 60
 testRunner.And("1_0 a new linked consumer product request with (Name:\'humus\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 61
 testRunner.And("1_0 a new linked consumer product request with (Name:\'patatas de la casa\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 62
 testRunner.Then("1_0 a consumption request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 63
 testRunner.Then("1_0 consumption contains product (name:\'chuleton de avila\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 64
 testRunner.Then("1_0 consumption contains product (name:\'humus\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 65
 testRunner.Then("1_0 consumption contains product (name:\'patatas de la casa\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 66
 testRunner.Then("1_0 get OAuthApp access token (ClientId:\'OauthAppTestUpdatingFromERPProductsUsedI" +
                        "nConsumerConsumption\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 67
 testRunner.And("1_0 start using access token for all requests", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                            "ERPIdConsumer",
                            "ERPIdProduct"});
                table14.AddRow(new string[] {
                            "8",
                            "3"});
                table14.AddRow(new string[] {
                            "8",
                            "1"});
#line 68
 testRunner.And("1_0 Put MostConsumedCatalogProducts", ((string)(null)), table14, "And ");
#line hidden
                TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                            "ERPId",
                            "DisplayOrder",
                            "Name"});
                table15.AddRow(new string[] {
                            "1",
                            "1",
                            "entrantes"});
                table15.AddRow(new string[] {
                            "2",
                            "2",
                            "primeros"});
                table15.AddRow(new string[] {
                            "3",
                            "3",
                            "carnes"});
                table15.AddRow(new string[] {
                            "4",
                            "4",
                            "postres"});
#line 72
 testRunner.And("1_0 set Sections for Put", ((string)(null)), table15, "And ");
#line hidden
                TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                            "IsHiddenInCarte",
                            "DisplayOrder",
                            "SectionERPIds",
                            "ERPId",
                            "PVP",
                            "AllergenIds",
                            "IsVegan",
                            "Description",
                            "Name"});
                table16.AddRow(new string[] {
                            "false",
                            "2",
                            "1",
                            "2",
                            "5",
                            "1",
                            "false",
                            "patatas con queso y bacon",
                            "patatas de la casa"});
                table16.AddRow(new string[] {
                            "false",
                            "3",
                            "3",
                            "3",
                            "21",
                            "",
                            "false",
                            "chuleton de avila D.O",
                            "chuleton de avila"});
#line 78
 testRunner.And("1_0 Put ERPCatalogProducts", ((string)(null)), table16, "And ");
#line hidden
#line 82
 testRunner.And("1_0 get access token for user (userName: \'consumer.UpdatingFromERPProductsUsedInC" +
                        "onsumerConsumption\' password: \',Adios22\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 83
 testRunner.And("1_0 response is Ok", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 84
 testRunner.And("1_0 start using access token for all requests", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 85
 testRunner.Then("1_0 a consumption request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 86
 testRunner.Then("1_0 consumption contains product (name:\'chuleton de avila\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 87
 testRunner.Then("1_0 consumption contains product (name:\'patatas de la casa\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 88
 testRunner.Then("1_0 consumption contains product but empty erpId and ProviderOID (name:\'humus\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 89
 testRunner.Then("1_0 remove linked consumer product request with (name:\'patatas de la casa\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 90
 testRunner.Then("1_0 a consumption request", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 91
 testRunner.Then("1_0 consumption doesn\'t contain product (name:\'patatas de la casa\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 92
testRunner.Then("1_0 get OAuthApp access token (ClientId:\'OauthAppTestUpdatingFromERPProductsUsedI" +
                        "nConsumerConsumption\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 93
 testRunner.And("1_0 start using access token for all requests", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                            "ERPIdConsumer",
                            "ERPIdProduct"});
                table17.AddRow(new string[] {
                            "8",
                            "3"});
                table17.AddRow(new string[] {
                            "8",
                            "1"});
#line 94
 testRunner.And("1_0 Put MostConsumedCatalogProducts", ((string)(null)), table17, "And ");
#line hidden
#line 98
    testRunner.And("1_0 response is Ok (Content:\'[{\"erpIdConsumer\":\"8\",\"erpIdProduct\":\"1\"}]\')", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
