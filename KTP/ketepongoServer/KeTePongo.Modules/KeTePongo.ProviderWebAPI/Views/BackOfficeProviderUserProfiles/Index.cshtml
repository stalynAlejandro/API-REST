@model KeTePongo.ProviderWebAPI.ViewModels.ProviderUsersViewModel
@using KeTePongo.UsersWebAPI.Abstractions.DTOs.v0_1
@{
    ViewData["Title"] = "Users of Provider";
}

<h2>Users of Provider: @Model.Provider.OID - @Model.Provider.TradeName</h2>

<p>
    <a asp-area="KeTePongo.UsersWebAPI" asp-controller="BackOfficeUser" asp-action="Create"
       asp-all-route-data="@(new Dictionary<string,string>{
                                            { "userType", ((int)UserType.ProviderUser).ToString() },
                                            { "companyOID", ((int)Model.Provider.OID).ToString() } }
                                        )">Create New</a>

</p>

<table class="table">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                E-mail
            </th>
            <th>
                Name
            </th>
            <th>
                Admin
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ProviderUsers)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsAdmin)
            </td>
            <td>
                <a asp-action="Index" asp-controller="BackOfficeChangeUserProvider"
                   asp-all-route-data="@(new Dictionary<string,string>{
                                            { "userName", @item.UserName.ToString() }})">Change Provider</a> |
                <a asp-area="KeTePongo.UsersWebAPI" asp-controller="BackOfficeUser" asp-action="Edit"
                   asp-all-route-data="@(new Dictionary<string,string>{
                                            { "userName", @item.UserName.ToString() }})"
                   asp-route-returnUrl="@FullRequestPath">Edit</a> |
            </td>
        </tr>
        }
    </tbody>
</table>
@await DisplayAsync(Model.Pager)
